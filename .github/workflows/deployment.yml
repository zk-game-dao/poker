name: ZkPoker Mainnet Deployment Workflow

on:
  push:
    branches: [ "main", "development" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  deploy:
    if: false
    name: Deploy to Mainnet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: cargo-cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install dfx
        uses: dfinity/setup-dfx@main
        with: 
          dfx-version: "0.24.2"

      - name: Setup Identity for Mainnet Deployment
        run: |
          mkdir -p ~/.config/dfx/identity/mainnet-identity
          echo "${{ secrets.DFX_IDENTITY_PEM }}" > ~/.config/dfx/identity/mainnet-identity/identity.pem
          chmod 600 ~/.config/dfx/identity/mainnet-identity/identity.pem
          dfx identity use mainnet-identity

      - name: Install Rust and wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Install dependencies
        run: npm ci

      - name: Start DFX
        run: dfx start --background

      - name: Setup deployer identity and create canisters
        run: |
          dfx canister create --all -v

      - name: Workaround - download assetstorage.did
        run: |
          mkdir -p .dfx/local/canisters/app_frontend && \
          curl -o .dfx/local/canisters/app_frontend/assetstorage.did https://raw.githubusercontent.com/jamesbeadle/OpenFPL/4ae9346d84233654a6856b8d05defa4df8a66346/candid/assetstorage.did

          mkdir -p .dfx/local/canisters/btc_frontend && \
          curl -o .dfx/local/canisters/btc_frontend/assetstorage.did https://raw.githubusercontent.com/jamesbeadle/OpenFPL/4ae9346d84233654a6856b8d05defa4df8a66346/candid/assetstorage.did

      - name: Download canister files
        run: |
          ./scripts/download-canister-files.sh

      - name: Generate .did
        run: |
          dfx generate

      - name: Build and install UI Libraries
        run: |
          npm ci

      - name: Build frontends
        run: |
          npm run build

      - name: Deploy to the Mainnet
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          if [ "$BRANCH_NAME" == "main" ]; then
            echo "Deploying to Mainnet"
            dfx deploy --network ic --identity mainnet-identity -y
          elif [ "$BRANCH_NAME" == "development" ]; then
            echo "Deploying to Mainnet Sandbox"
            mv ./test_canister_ids.json ./canister_ids.json
            dfx deploy --network ic --identity mainnet-identity -y
          else
            echo "Error: Unknown branch $BRANCH_NAME"
            exit 1
          fi

      - name: Notify on success
        if: ${{ success() }}
        run: echo "Deployment to Mainnet successful!"
